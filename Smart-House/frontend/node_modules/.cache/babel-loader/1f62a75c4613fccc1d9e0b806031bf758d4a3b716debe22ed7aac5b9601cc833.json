{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\YOLO_HOME - Copy - 2\\\\frontend\\\\src\\\\components\\\\Sensors\\\\Sensors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SensorChart from './SensorChart';\nimport styles from './Sensors.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sensors = () => {\n  _s();\n  const [selectedSensor, setSelectedSensor] = useState('temperature');\n  const sensorTypes = [{\n    type: 'temperature',\n    label: 'Temperature',\n    icon: 'fas fa-thermometer-half'\n  }, {\n    type: 'humidity',\n    label: 'Humidity',\n    icon: 'fas fa-tint'\n  }, {\n    type: 'motion',\n    label: 'Motion',\n    icon: 'fas fa-running'\n  }, {\n    type: 'airQuality',\n    label: 'Air Quality',\n    icon: 'fas fa-wind'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.sensorsContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.sensorsHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sensor Readings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sensorTypeSelector,\n        children: sensorTypes.map(sensor => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styles.sensorTypeBtn} ${selectedSensor === sensor.type ? styles.active : ''}`,\n          onClick: () => setSelectedSensor(sensor.type),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: sensor.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: sensor.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, sensor.type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Sensors, \"mgVHsJkWJRMlNXvve68PfROLMak=\");\n_c = Sensors;\nexport default Sensors;\nvar _c;\n$RefreshReg$(_c, \"Sensors\");","map":{"version":3,"names":["React","useState","SensorChart","styles","jsxDEV","_jsxDEV","Sensors","_s","selectedSensor","setSelectedSensor","sensorTypes","type","label","icon","className","sensorsContainer","children","sensorsHeader","fileName","_jsxFileName","lineNumber","columnNumber","sensorTypeSelector","map","sensor","sensorTypeBtn","active","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/OneDrive/Máy tính/YOLO_HOME - Copy - 2/frontend/src/components/Sensors/Sensors.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SensorChart from './SensorChart';\r\nimport styles from './Sensors.module.css';\r\n\r\nconst Sensors = () => {\r\n  const [selectedSensor, setSelectedSensor] = useState('temperature');\r\n  \r\n  const sensorTypes = [\r\n    { type: 'temperature', label: 'Temperature', icon: 'fas fa-thermometer-half' },\r\n    { type: 'humidity', label: 'Humidity', icon: 'fas fa-tint' },\r\n    { type: 'motion', label: 'Motion', icon: 'fas fa-running' },\r\n    { type: 'airQuality', label: 'Air Quality', icon: 'fas fa-wind' }\r\n  ];\r\n  \r\n  return (\r\n    <div className={styles.sensorsContainer}>\r\n      <div className={styles.sensorsHeader}>\r\n        <h1>Sensor Readings</h1>\r\n        <div className={styles.sensorTypeSelector}>\r\n          {sensorTypes.map(sensor => (\r\n            <button\r\n              key={sensor.type}\r\n              className={`${styles.sensorTypeBtn} ${selectedSensor === sensor.type ? styles.active : ''}`}\r\n              onClick={() => setSelectedSensor(sensor.type)}\r\n            >\r\n              <i className={sensor.icon}></i>\r\n              <span>{sensor.label}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sensors;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,aAAa,CAAC;EAEnE,MAAMS,WAAW,GAAG,CAClB;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE;EAA0B,CAAC,EAC9E;IAAEF,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAc,CAAC,EAC5D;IAAEF,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAiB,CAAC,EAC3D;IAAEF,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE;EAAc,CAAC,CAClE;EAED,oBACER,OAAA;IAAKS,SAAS,EAAEX,MAAM,CAACY,gBAAiB;IAAAC,QAAA,eACtCX,OAAA;MAAKS,SAAS,EAAEX,MAAM,CAACc,aAAc;MAAAD,QAAA,gBACnCX,OAAA;QAAAW,QAAA,EAAI;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBhB,OAAA;QAAKS,SAAS,EAAEX,MAAM,CAACmB,kBAAmB;QAAAN,QAAA,EACvCN,WAAW,CAACa,GAAG,CAACC,MAAM,iBACrBnB,OAAA;UAEES,SAAS,EAAE,GAAGX,MAAM,CAACsB,aAAa,IAAIjB,cAAc,KAAKgB,MAAM,CAACb,IAAI,GAAGR,MAAM,CAACuB,MAAM,GAAG,EAAE,EAAG;UAC5FC,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACe,MAAM,CAACb,IAAI,CAAE;UAAAK,QAAA,gBAE9CX,OAAA;YAAGS,SAAS,EAAEU,MAAM,CAACX;UAAK;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/BhB,OAAA;YAAAW,QAAA,EAAOQ,MAAM,CAACZ;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GALtBG,MAAM,CAACb,IAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BID,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}