{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\YOLO_HOME - Copy - 2\\\\frontend\\\\src\\\\components\\\\Sensors\\\\Sensors.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SensorChart from 'components/Sensors/SensorChart';\nimport './Sensors.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sensors = () => {\n  _s();\n  const [selectedSensor, setSelectedSensor] = useState('temperature');\n  const sensorTypes = [{\n    type: 'temperature',\n    label: 'Temperature',\n    icon: 'fas fa-thermometer-half'\n  }, {\n    type: 'humidity',\n    label: 'Humidity',\n    icon: 'fas fa-tint'\n  }, {\n    type: 'motion',\n    label: 'Motion',\n    icon: 'fas fa-running'\n  }, {\n    type: 'airQuality',\n    label: 'Air Quality',\n    icon: 'fas fa-wind'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sensors-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensors-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sensor Readings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sensor-type-selector\",\n        children: sensorTypes.map(sensor => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `sensor-type-btn ${selectedSensor === sensor.type ? 'active' : ''}`,\n          onClick: () => setSelectedSensor(sensor.type),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: sensor.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: sensor.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, sensor.type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sensor-chart-wrapper\",\n      children: [selectedSensor === 'temperature' && /*#__PURE__*/_jsxDEV(SensorChart, {\n        sensorType: \"temperature\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 46\n      }, this), selectedSensor === 'humidity' && /*#__PURE__*/_jsxDEV(SensorChart, {\n        sensorType: \"humidity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Sensors, \"mgVHsJkWJRMlNXvve68PfROLMak=\");\n_c = Sensors;\nexport default Sensors;\nvar _c;\n$RefreshReg$(_c, \"Sensors\");","map":{"version":3,"names":["React","useState","SensorChart","jsxDEV","_jsxDEV","Sensors","_s","selectedSensor","setSelectedSensor","sensorTypes","type","label","icon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","sensor","onClick","sensorType","_c","$RefreshReg$"],"sources":["C:/Users/admin/OneDrive/Máy tính/YOLO_HOME - Copy - 2/frontend/src/components/Sensors/Sensors.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SensorChart from 'components/Sensors/SensorChart';\r\nimport './Sensors.css';\r\nconst Sensors = () => {\r\n  const [selectedSensor, setSelectedSensor] = useState('temperature');\r\n  \r\n  const sensorTypes = [\r\n    { type: 'temperature', label: 'Temperature', icon: 'fas fa-thermometer-half' },\r\n    { type: 'humidity', label: 'Humidity', icon: 'fas fa-tint' },\r\n    { type: 'motion', label: 'Motion', icon: 'fas fa-running' },\r\n    { type: 'airQuality', label: 'Air Quality', icon: 'fas fa-wind' }\r\n  ];\r\n  \r\n  return (\r\n    <div className=\"sensors-container\">\r\n      <div className=\"sensors-header\">\r\n        <h1>Sensor Readings</h1>\r\n        <div className=\"sensor-type-selector\">\r\n          {sensorTypes.map(sensor => (\r\n            <button\r\n              key={sensor.type}\r\n              className={`sensor-type-btn ${selectedSensor === sensor.type ? 'active' : ''}`}\r\n              onClick={() => setSelectedSensor(sensor.type)}\r\n            >\r\n              <i className={sensor.icon}></i>\r\n              <span>{sensor.label}</span>\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"sensor-chart-wrapper\">\r\n        {selectedSensor === 'temperature' && <SensorChart sensorType=\"temperature\" />}\r\n        {selectedSensor === 'humidity' && <SensorChart sensorType=\"humidity\" />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sensors;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,gCAAgC;AACxD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,aAAa,CAAC;EAEnE,MAAMQ,WAAW,GAAG,CAClB;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE;EAA0B,CAAC,EAC9E;IAAEF,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,UAAU;IAAEC,IAAI,EAAE;EAAc,CAAC,EAC5D;IAAEF,IAAI,EAAE,QAAQ;IAAEC,KAAK,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAiB,CAAC,EAC3D;IAAEF,IAAI,EAAE,YAAY;IAAEC,KAAK,EAAE,aAAa;IAAEC,IAAI,EAAE;EAAc,CAAC,CAClE;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCV,OAAA;MAAKS,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BV,OAAA;QAAAU,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBd,OAAA;QAAKS,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAClCL,WAAW,CAACU,GAAG,CAACC,MAAM,iBACrBhB,OAAA;UAEES,SAAS,EAAE,mBAAmBN,cAAc,KAAKa,MAAM,CAACV,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC/EW,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACY,MAAM,CAACV,IAAI,CAAE;UAAAI,QAAA,gBAE9CV,OAAA;YAAGS,SAAS,EAAEO,MAAM,CAACR;UAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/Bd,OAAA;YAAAU,QAAA,EAAOM,MAAM,CAACT;UAAK;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA,GALtBE,MAAM,CAACV,IAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENd,OAAA;MAAKS,SAAS,EAAC,sBAAsB;MAAAC,QAAA,GAClCP,cAAc,KAAK,aAAa,iBAAIH,OAAA,CAACF,WAAW;QAACoB,UAAU,EAAC;MAAa;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC5EX,cAAc,KAAK,UAAU,iBAAIH,OAAA,CAACF,WAAW;QAACoB,UAAU,EAAC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAlCID,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAoCb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}