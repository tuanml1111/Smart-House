{
    "sourceFile": "frontend/src/components/Dashboard/Dashboard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1746518250721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1746518250721,
            "name": "Commit-0",
            "content": "// frontend/src/components/Dashboard/Dashboard.jsx\r\nimport React, { useEffect, useState } from 'react';\r\nimport SensorController from '../../controllers/SensorController';\r\nimport DeviceController from '../../controllers/DeviceController';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => {\r\n  const [sensorData, setSensorData] = useState({\r\n    temperature: 0,\r\n    humidity: 0,\r\n    motion: false\r\n  });\r\n  \r\n  const [deviceStats, setDeviceStats] = useState({\r\n    total: 0,\r\n    online: 0,\r\n    offline: 0\r\n  });\r\n  \r\n  const [alerts, setAlerts] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    const loadDashboardData = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        // Load sensor data\r\n        const sensorResult = await SensorController.getLatestReadings();\r\n        setSensorData(sensorResult);\r\n        \r\n        // Load device statistics\r\n        const deviceResult = await DeviceController.getDeviceStats();\r\n        setDeviceStats(deviceResult);\r\n        \r\n        // Load recent alerts\r\n        const alertsResult = await SensorController.getRecentAlerts();\r\n        setAlerts(alertsResult);\r\n      } catch (error) {\r\n        console.error('Error loading dashboard data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadDashboardData();\r\n    \r\n    // Set up polling interval\r\n    const interval = setInterval(loadDashboardData, 30000);\r\n    \r\n    // Clean up interval on unmount\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  \r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n  \r\n  if (isLoading) {\r\n    return <div className=\"loading-indicator\">Loading dashboard data...</div>;\r\n  }\r\n  \r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h1>Dashboard</h1>\r\n      \r\n      <div className=\"dashboard-grid\">\r\n        {/* Device Statistics */}\r\n        <div className=\"card\">\r\n          <h2>Devices</h2>\r\n          <div className=\"stats\">\r\n            <div className=\"stat\">\r\n              <span className=\"stat-value\">{deviceStats.total}</span>\r\n              <span className=\"stat-label\">Total</span>\r\n            </div>\r\n            <div className=\"stat\">\r\n              <span className=\"stat-value stat-online\">{deviceStats.online}</span>\r\n              <span className=\"stat-label\">Online</span>\r\n            </div>\r\n            <div className=\"stat\">\r\n              <span className=\"stat-value stat-offline\">{deviceStats.offline}</span>\r\n              <span className=\"stat-label\">Offline</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Current Sensor Readings */}\r\n        <div className=\"card\">\r\n          <h2>Current Readings</h2>\r\n          <div className=\"readings\">\r\n            <div className=\"reading\">\r\n              <div className=\"reading-icon temp-icon\">\r\n                <i className=\"fas fa-thermometer-half\"></i>\r\n              </div>\r\n              <div className=\"reading-details\">\r\n                <span className=\"reading-value\">{sensorData.temperature}Â°C</span>\r\n                <span className=\"reading-label\">Temperature</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"reading\">\r\n              <div className=\"reading-icon humidity-icon\">\r\n                <i className=\"fas fa-tint\"></i>\r\n              </div>\r\n              <div className=\"reading-details\">\r\n                <span className=\"reading-value\">{sensorData.humidity}%</span>\r\n                <span className=\"reading-label\">Humidity</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"reading\">\r\n              <div className={`reading-icon motion-icon ${sensorData.motion ? 'active' : ''}`}>\r\n                <i className=\"fas fa-running\"></i>\r\n              </div>\r\n              <div className=\"reading-details\">\r\n                <span className={`reading-value ${sensorData.motion ? 'active' : ''}`}>\r\n                  {sensorData.motion ? 'Detected' : 'None'}\r\n                </span>\r\n                <span className=\"reading-label\">Motion</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Recent Alerts */}\r\n        <div className=\"card\">\r\n          <h2>Recent Alerts</h2>\r\n          {alerts.length > 0 ? (\r\n            <ul className=\"alert-list\">\r\n              {alerts.map((alert) => (\r\n                <li key={alert.id} className={`alert ${alert.status}`}>\r\n                  <div className=\"alert-icon\">\r\n                    {alert.type === 'temperature' && <i className=\"fas fa-thermometer-full\"></i>}\r\n                    {alert.type === 'humidity' && <i className=\"fas fa-tint\"></i>}\r\n                    {alert.type === 'motion' && <i className=\"fas fa-running\"></i>}\r\n                  </div>\r\n                  <div className=\"alert-details\">\r\n                    <span className=\"alert-message\">{alert.message}</span>\r\n                    <span className=\"alert-time\">{formatTime(alert.timestamp)}</span>\r\n                  </div>\r\n                  <div className=\"alert-status\">\r\n                    <span className={alert.status}>{alert.status}</span>\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p className=\"no-alerts\">No recent alerts</p>\r\n          )}\r\n          <div className=\"card-footer\">\r\n            <a href=\"/alerts\" className=\"view-all\">View All Alerts</a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"
        }
    ]
}